apiVersion: apps/v1
kind: Deployment
metadata: 
  name: nginx
  namespace: winter-dev
  labels:
    app: nginx
spec: 
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/sites-available/default.conf
              subPath: default.conf
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: conf.d
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf

--- 
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: winter-dev
data:
  default.conf: |
    server {
      listen 80;
      server_name localhost;

      root /var/www/html/winter/public;
      index index.php;

      location / {
        try_files $uri $uri/ /index.php?$query_string;
      }

      location ~ \.php$ {
        fastcgi_pass winter-php-service.winter-dev.svc.cluster.local:9000;  # имя сервиса для PHP-FPM пода
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME /var/www/html/winter/public$fastcgi_script_name;
        include fastcgi_params;
      }
    }
  nginx.conf: |        
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log;
    pid        /var/run/nginx.pid;

    events {
      worker_connections  1024;
    }

    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /var/log/nginx/access.log;

      sendfile        on;
      #tcp_nopush     on;

      keepalive_timeout  65;

      #gzip  on;

      include /etc/nginx/conf.d/*.conf;
      include /etc/nginx/sites-available/*.conf;
    }
  conf.d: |
    #

---
apiVersion: v1 
kind: Service 
metadata: 
  name: nginx-service
  namespace: winter-dev
  labels:   
    app: nginx
spec:
  type: NodePort
  selector: 
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 31052
